import heapq

class Peta:
    def __init__(self):
        self.cityList = {}
        self.weights = {}
    
    def printPeta(self):
        for kota in self.cityList:
            print("Kota:", kota)
            for connected_city in self.cityList[kota]:
                weight = self.weights.get((kota, connected_city), "Unknown")
                print("  └─>", connected_city, "jarak:", weight)
        
    def tambahkanKota(self, kota):
        if kota not in self.cityList:
            self.cityList[kota] = []
            return True
        return False
    
    def hapusKota(self, kotaDihapus):
        if kotaDihapus in self.cityList:
            for kotaLain in self.cityList:
                if kotaDihapus in self.cityList[kotaLain]:
                    self.cityList[kotaLain].remove(kotaDihapus)
                    del self.weights[(kotaLain, kotaDihapus)]
            del self.cityList[kotaDihapus]
            return True
        return False
    
    def tambahkanJalan(self, kota1, kota2, jarak):
        if kota1 in self.cityList and kota2 in self.cityList:
            self.cityList[kota1].append(kota2)
            self.cityList[kota2].append(kota1)
            self.weights[(kota1, kota2)] = jarak
            self.weights[(kota2, kota1)] = jarak
            return True
        return False
